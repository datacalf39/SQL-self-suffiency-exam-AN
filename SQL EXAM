1. 
SELECT column_name, data_type
FROM information_schema.columns
WHERE table_name = 'naep';
2.
SELECT *
FROM naep
LIMIT 50;
3.
SELECT state,
       count(avg_math_4_score),
       avg(avg_math_4_score),
       min(avg_math_4_score),
       max(avg_math_4_score)
FROM naep
GROUP BY state
ORDER BY state;
4.
SELECT state,
       count(avg_math_4_score),
       avg(avg_math_4_score),
       min(avg_math_4_score) as min_v,
       max(avg_math_4_score) as max_v
FROM naep 
GROUP BY state
HAVING MAX(avg_math_4_score) - MIN(avg_math_4_score)  > 30
ORDER BY state;
5.
SELECT state AS bottom_10_states 
FROM naep 
WHERE year = '2000' 
ORDER BY avg_math_4_score 
LIMIT 10;
6.
SELECT ROUND(AVG(avg_math_4_score),2),state
FROM naep
WHERE year= '2000'
GROUP BY state 
ORDER BY state;

or 

SELECT round(AVG(avg_math_4_score), 2)
FROM naep
WHERE year = '2000';

7.
WITH AVR_ST AS
    (SELECT AVG(avg_math_4_score) as AVG_STATES
    FROM naep
    WHERE year = '2000'
    GROUP BY state)
SELECT avg_math_4_score AS below_average_states_y2000, state
FROM naep, AVR_ST
WHERE avg_math_4_score < AVG_STATES;

8.
SELECT state as  scores_missing_y2000, avg_math_4_score 
FROM naep
WHERE year = '2000' AND avg_math_4_score IS NULL;

9.
SELECT naep.state, ROUND(naep.avg_math_4_score, 2) as avg_math_4_score, finance.total_expenditure
FROM naep LEFT OUTER JOIN finance 
ON naep.id = finance.id
WHERE naep.year = '2000' AND avg_math_4_score IS NOT NULL
ORDER BY finance.total_expenditure DESC;
